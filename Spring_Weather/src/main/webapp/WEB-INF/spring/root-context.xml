<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">


	<context:component-scan
		base-package="com.weather.myapp" />
	<!-- Database 설정 -->

	<!-- db 설정 파일의 위치 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:properties/config.properties</value>
			</list>
		</property>
	</bean>

	<!-- DBMS -->
	<!-- BasicDataSource dataSource = new BasicDataSource(); driverClassName 
		= jdbc.driverClassName; -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName"
			value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<!-- <property name="maxActive" value="${jdbc.maxActive}"/> -->
		<property name="minIdle" value="${jdbc.initialSize}" />
		<!-- <property name="maxWait" value="3000"/> -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxOpenPreparedStatements" value="50" />
		<property name="defaultAutoCommit" value="true" />
		<property name="validationQuery" value="select 1" />
		<!-- testWhileIdle:컨넥션이 놀고 있을때 validationQuery 를 이용해서 유효성 검사를 할지 여부. -->
		<property name="testWhileIdle" value="true" />
		<!-- timeBetweenEvictionRunsMillis:해당 밀리초마다 validationQuery 를 이용하여 유효성 
			검사 진행 -->
		<property name="timeBetweenEvictionRunsMillis"
			value="7200000" />
	</bean>

	<!-- mybatis setting -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:sqls/*.xml" />
	</bean>

	<!-- sqlSession 취득 -->
	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
		<constructor-arg index="1" value="SIMPLE" />	<!-- SIMPLE/BATCH -->
	</bean>

	<!-- jdbc -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- mybatis -->
	<mybatis-spring:scan
		base-package="com.weather.myapp.contorller" />

	<!-- AspectJ라이브러리를 이용한 Proxy 객체를 생성 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

	<!-- XML 방식으로 AOP 기능을 설정할 때 사용 : 이 예제에는 어노테이션을 사용하므로 필요없긴 하다. -->
	<aop:config></aop:config>

	<!-- config -->
	<!-- <util:properties id="config" location="/properties/*.properties"/> 
		<context:property-placeholder properties-ref="config"/> -->
</beans>





